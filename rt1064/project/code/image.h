#ifndef _IMAGE_H
#define _IMAGE_H

#include "zf_common_headfile.h"

//???????  ???????????????????????????????????
#define uesr_RED     0XF800    //???
#define uesr_GREEN   0X07E0    //???
#define uesr_BLUE    0X001F    //???

//????
#define image_h	MT9V03X_H//?????
#define image_w	MT9V03X_W//??????
#define KERNEL_SIZE 3    // ??????Ä¥3x3??
#define BORDER     1     // ??ï¿½ï¿½??????

#define BORDER_COLOR     0x07E0  // ???????????RGB565??
#define MAX_ITERATIONS   500     // ?????????????????
#define SEARCH_STEP      2       // ???????????

#define ZHIXIAN_START_Y  (image_h * 3 / 4)
#define ZHIXIAN_END_Y   (image_h * 1 / 4)  
#define ELEMENT_START_Y (image_h * 3 / 4)  // 3/4
#define ELEMENT_END_Y   (image_h /2)      // 1/2
#define QL_START_Y (image_h * 3 / 4) 
#define QL_END_Y   (image_h * 1 / 4)     
#define DUIXIAN_START_Y (image_h * 3 / 4)
#define DUIXIAN_END_Y	(image_h * 1 / 4)
#define DUIXIAN2_START_Y (80)
#define DUIXIAN2_END_Y   (50) 
#define DUIXIAN3_START_Y (115)
#define DUIXIAN3_END_Y   (85)
#define CNT	5
#define CNT_TURN 6
#define DISTANCE_1 120     //95
#define DISTANCE_2 90
#define DISTANCE_3 25
#define THRESHOLD_SAMPLING_DISTANCE 	( 10 )	// ï¿½ï¿½Öµï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿?
extern int32 track_error;
extern uint8 bin_image[image_h][image_w];
extern int destination_flag;
extern int final;
extern int moveflag;
// ???????
typedef struct {
    uint16 x;
    uint16 y;
} BorderPoint;

// ?????????
typedef struct {
    uint16 x;  // ?????????
    uint16 y;  // ??????????
    uint8 valid; // ?????ï¿½ï¿½??1=??ï¿½ï¿½??0=??ï¿½ï¿½??
} CenterLine;

//????????
void ImageProcess(); 
void draw_enhanced_borders();       // ??????
void draw_centerline();       // ???????
void display_status_flags(); // ????????
#endif /*_IMAGE_H*/

